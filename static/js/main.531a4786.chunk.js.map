{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","setSelected","good","setState","prevState","setRemove","prevGood","filter","clear","createTitle","length","join","slice","this","className","type","onClick","map","classNames","active","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAI9CG,UAAY,SAACC,GACX,OAAO,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACjCJ,aAAcI,EAAUJ,aAAaO,QAAO,SAAAL,GAAI,OAAIA,IAASI,U,EAIjEE,MAAQ,WACN,EAAKL,SAAS,CAAEH,aAAc,M,EAGhCS,YAAc,WACZ,IAAQT,EAAiB,EAAKD,MAAtBC,aAER,OAAQA,EAAaU,QACnB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAa,GAAvB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAaW,KAAK,SAA5B,iBAEF,QACE,MAAM,GAAN,OAAUX,EAAaY,MAAM,GAAI,GAAGD,KAAK,MAAzC,gBAAsDX,EAAaA,EAAaU,OAAS,GAAzF,mB,4CAIN,WAAU,IAAD,OACCV,EAAiBa,KAAKd,MAAtBC,aAER,OACE,qBAAKc,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAIA,UAAU,iBAAd,WACId,EAAaU,QACb,wBACEK,KAAK,SACLD,UAAU,uBACVE,QAAS,WACP,EAAKR,SAJT,mBAUDK,KAAKJ,iBAER,oBAAIK,UAAU,gBAAd,SACGjB,EAAgBoB,KAAI,SAACf,GAAD,OACnB,qCACE,oBACEY,UAAWI,IACT,gBACA,CACEC,OAAQnB,EAAaoB,SAASlB,KAJpC,SASGA,GAFIA,GAIP,wBACEa,KAAK,SACLD,UAAU,kBACVE,QAAS,WACP,OAAIhB,EAAaoB,SAASlB,GACjB,EAAKG,UAAUH,GAGjB,EAAKD,YAAYC,IAR5B,SAWGF,EAAaoB,SAASlB,GAAQ,SAAW,4B,GApF1CmB,IAAMC,WA+FTxB,ICjHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.531a4786.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  setSelected = (good: string) => {\n    this.setState(prevState => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  setRemove = (prevGood: string) => {\n    return this.setState(prevState => ({\n      selectedGood: prevState.selectedGood.filter(good => good !== prevGood),\n    }));\n  };\n\n  clear = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  createTitle = () => {\n    const { selectedGood } = this.state;\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGood[0]} is selected`;\n\n      case 2:\n        return `${selectedGood.join(' and ')} are selected`;\n\n      default:\n        return `${selectedGood.slice(0, -1).join(', ')} and ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"product\">\n          <h1 className=\"product__title\">\n            {!selectedGood.length || (\n              <button\n                type=\"button\"\n                className=\"product__title-clear\"\n                onClick={() => {\n                  this.clear();\n                }}\n              >\n                Clear\n              </button>\n            )}\n            {this.createTitle()}\n          </h1>\n          <ol className=\"product__list\">\n            {goodsFromServer.map((good) => (\n              <>\n                <li\n                  className={classNames(\n                    'product__list',\n                    {\n                      active: selectedGood.includes(good),\n                    },\n                  )}\n                  key={good}\n                >\n                  {good}\n                </li>\n                <button\n                  type=\"button\"\n                  className=\"product__select\"\n                  onClick={() => {\n                    if (selectedGood.includes(good)) {\n                      return this.setRemove(good);\n                    }\n\n                    return this.setSelected(good);\n                  }}\n                >\n                  {selectedGood.includes(good) ? 'Remove' : 'Select'}\n                </button>\n              </>\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}